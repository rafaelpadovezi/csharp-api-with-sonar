name: Sonar
on:
  workflow_run:
    workflows: [Tests]
    types: [completed]
jobs:
  sonar:
    name: Analyze
    runs-on: ubuntu-latest
    if: >
      github.event.workflow_run.event == 'pull_request' &&
      github.event.workflow_run.conclusion == 'success'
    steps:
      - uses: actions/checkout@v3
        with:
          repository: ${{ github.event.workflow_run.head_repository.full_name }}
          ref: ${{ github.event.workflow_run.head_branch }}
          fetch-depth: 0
      - name: 'Download artifacts'
        uses: actions/github-script@v6
        with:
          script: |
            // https://securitylab.github.com/research/github-actions-preventing-pwn-requests/
            const artifactName = "pr";
            let allArtifacts = await github.rest.actions.listWorkflowRunArtifacts({
               owner: context.repo.owner,
               repo: context.repo.repo,
               run_id: context.payload.workflow_run.id,
            });
            let matchArtifact = allArtifacts.data.artifacts.filter((artifact) => {
              return artifact.name == artifactName
            })[0];
            let download = await github.rest.actions.downloadArtifact({
               owner: context.repo.owner,
               repo: context.repo.repo,
               artifact_id: matchArtifact.id,
               archive_format: 'zip',
            });
            let fs = require('fs');
            fs.writeFileSync(`${process.env.GITHUB_WORKSPACE}/${artifactName}.zip`, Buffer.from(download.data));
      - name: Unzip artefacts and restore env
        run: |
          unzip pr.zip -d tests-reports/
          cat tests-reports/pr.env >> "${GITHUB_ENV}"

      - name: SonarQube Scan
        uses: sonarsource/sonarqube-scan-action@master
        env:
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
          SONAR_HOST_URL: "https://sonarcloud.io"
          PROJECT_VERSION: ${{ github.event.workflow_run.head_sha }}
        with:
          projectBaseDir: app/src
          args: >
            -Dsonar.scm.revision="$PROJECT_VERSION"
            -Dsonar.cs.opencover.reportsPaths="**/*/coverage.opencover.xml"
            -Dsonar.cs.vstest.reportsPaths="**/*/*.trx"
            -Dsonar.pullrequest.base=$PR_BASE_REF
            -Dsonar.pullrequest.branch=$PR_HEAD_REF
            -Dsonar.pullrequest.key=$PR_NUMBER
